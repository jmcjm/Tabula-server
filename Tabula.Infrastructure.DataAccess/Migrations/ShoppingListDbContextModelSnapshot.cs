// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tabula.Infrastructure.DataAccess.Database;

#nullable disable

namespace Tabula.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(ShoppingListDbContext))]
    partial class ShoppingListDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tabula.Infrastructure.DataAccess.Models.ItemDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ProductName");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("Quantity");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("uuid")
                        .HasColumnName("ShoppingListId");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("Tabula.Infrastructure.DataAccess.Models.ShoppingListDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.ToTable("ShoppingLists", (string)null);
                });

            modelBuilder.Entity("Tabula.Infrastructure.DataAccess.Models.ShoppingListShareDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("OwnerId");

                    b.Property<int>("Permission")
                        .HasColumnType("integer")
                        .HasColumnName("Permission");

                    b.Property<DateTime>("SharedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("SharedAt");

                    b.Property<string>("SharedWithUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("SharedWithUserId");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingListId", "SharedWithUserId")
                        .IsUnique()
                        .HasDatabaseName("IX_ShoppingListShares_ShoppingListId_SharedWithUserId");

                    b.ToTable("ShoppingListShares", (string)null);
                });

            modelBuilder.Entity("Tabula.Infrastructure.DataAccess.Models.TagDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Color")
                        .HasColumnType("integer")
                        .HasColumnName("Color");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Name");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_Tags_UserId");

                    b.HasIndex("UserId", "Name")
                        .IsUnique()
                        .HasDatabaseName("IX_Tags_UserId_Name_Unique");

                    b.ToTable("Tags", (string)null);
                });

            modelBuilder.Entity("ShoppingListTags", b =>
                {
                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.HasKey("ShoppingListId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ShoppingListTags", (string)null);
                });

            modelBuilder.Entity("Tabula.Infrastructure.DataAccess.Models.ItemDao", b =>
                {
                    b.HasOne("Tabula.Infrastructure.DataAccess.Models.ShoppingListDao", null)
                        .WithMany("Items")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tabula.Infrastructure.DataAccess.Models.ShoppingListShareDao", b =>
                {
                    b.HasOne("Tabula.Infrastructure.DataAccess.Models.ShoppingListDao", "ShoppingList")
                        .WithMany()
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("ShoppingListTags", b =>
                {
                    b.HasOne("Tabula.Infrastructure.DataAccess.Models.ShoppingListDao", null)
                        .WithMany()
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tabula.Infrastructure.DataAccess.Models.TagDao", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tabula.Infrastructure.DataAccess.Models.ShoppingListDao", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
